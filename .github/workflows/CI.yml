name: CI
on: [push, pull_request]
jobs:
  build:
    name: Build & Test
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025, macos-15]
        include:
          - os: ubuntu-24.04
            build_command: ./build.c -DASAN
            run_command: ./out/exe/unbox dep/ivm_testdata/reel/png out/data
            doctest_command: ./out/exe/doc_example_program
            artifact_name: unbox-debug-x86_64-linux
          - os: windows-2025
            build_command: cmd.exe /c """C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -no_logo && cl.exe /nologo build.c && mt.exe -nologo -manifest dev/build/UTF8.manifest -outputresource:build.exe;#1 && build.exe"
            run_command: out/exe/unbox.exe dep/ivm_testdata/reel/png out/data
            doctest_command: out/exe/doc_example_program.exe
            artifact_name: unbox-debug-x86_64-win32
          - os: macos-15
            build_command: clang build.c -o build && ./build
            run_command: ./out/exe/unbox dep/ivm_testdata/reel/png out/data
            doctest_command: ./out/exe/doc_example_program
            artifact_name: unbox-debug-arm64-macos
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: "recursive"
      - name: Build
        run: ${{ matrix.build_command }}
      - name: Test
        run: ${{ matrix.run_command }}
      - name: Doc Test
        run: ${{ matrix.doctest_command }}
      - name: Upload debug binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            out/exe/*
            dev/doc_example_program.c
